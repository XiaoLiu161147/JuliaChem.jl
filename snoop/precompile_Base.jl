function _precompile_base()
    println("Precompiling base...")
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{typeof(Base.fill!), Base.ReinterpretArray{Float64, 2, Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Float64})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.SubArray{Float64, 1, Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Base.Complex{Float64}, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base._one), Base.Complex{Float64}, LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}})
    precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Float64, 1}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.ReinterpretArray{Float64, 2, Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.Slice{Base.OneTo{Int64}}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.fill!), Array{Base.Complex{Float64}, 2}, Base.Complex{Float64}})
    precompile(Tuple{typeof(Base.unsafe_copyto!), Array{Float64, 1}, Int64, Array{Float64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.sqrt), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Float64, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.:(+)), Tuple{Base.Broadcast.Extruded{Array{Float64, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}, Base.Broadcast.Extruded{Array{Float64, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.copyto!), Base.ReinterpretArray{Float64, 2, Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Float64, Base.Broadcast.Extruded{Array{Base.Complex{Float64}, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{String}}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Float64, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.ReinterpretArray{Float64, 2, Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.ssqs), Float64, Float64})
    precompile(Tuple{typeof(Base.copyto!), Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.ReinterpretArray{Float64, 2, Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.robust_cdiv1), Float64, Float64, Float64, Float64})
    precompile(Tuple{typeof(Base.fill!), Array{Float64, 4}, Float64})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Base.Complex{Float64}, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}, Base.Broadcast.Extruded{LinearAlgebra.Transpose{Float64, Array{Float64, 1}}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.Math.paynehanek), Float64})
    precompile(Tuple{typeof(Base.throw_boundserror), LinearAlgebra.Transpose{Base.Complex{Float64}, Array{Base.Complex{Float64}, 1}}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Base.Complex{Float64}, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.setindex!), LinearAlgebra.UpperTriangular{Float64, Array{Float64, 2}}, Base.Complex{Float64}, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), LinearAlgebra.Transpose{Float64, Array{Float64, 1}}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.copyto!), Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.copyto!), Array{Base.Complex{Float64}, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Array{Base.Complex{Float64}, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 2}, Base.StepRange{Int64, Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.conj), Tuple{Base.Broadcast.Extruded{Array{Base.Complex{Float64}, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.:(==)), LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Array{Base.Complex{Float64}, 2}})
    precompile(Tuple{typeof(Base.exp), Float64})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.parse), Tuple{Base.RefValue{Type{Float64}}, Base.Broadcast.Extruded{Array{Base.SubString{String}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.:(+)), LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, LinearAlgebra.UniformScaling{Int64}})
    precompile(Tuple{typeof(Base.log1p), Float64})
    precompile(Tuple{typeof(Base.Math.sincos_domain_error), Float64})
    precompile(Tuple{typeof(Base.array_subpadding), Type{Int}, Type{Int}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.ReinterpretArray{Float64, 2, Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.throw_domerr_powbysq), Float64, Int64})
    precompile(Tuple{typeof(Base.:(^)), LinearAlgebra.Hermitian{Float64, Array{Float64, 2}}, Float64})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Array{Base.Complex{Float64}, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.unaliascopy), LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}})
    precompile(Tuple{typeof(Base.unaliascopy), LinearAlgebra.Hermitian{Float64, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.sqrt), LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}})
    precompile(Tuple{typeof(Base.unaliascopy), LinearAlgebra.Symmetric{Float64, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.fill!), Array{Base.Complex{Float64}, 2}, Int64})
    precompile(Tuple{typeof(Base.fill!), Array{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base.atanh), Base.Complex{Float64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Array{Float64, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.append_any), Tuple{Int64}, Int})
    precompile(Tuple{typeof(Base.unaliascopy), LinearAlgebra.UpperTriangular{Float64, Array{Float64, 2}}})
    precompile(Tuple{getfield(Base.Sort, Symbol("##sortperm#11")), (Base.Sort).QuickSortAlg, typeof(identity), typeof(identity), Nothing, (Base.Order).ForwardOrdering, typeof(identity), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.atan), Float64})
    precompile(Tuple{typeof(Base.:(*)), Array{Base.Complex{Float64}, 2}, LinearAlgebra.Diagonal{Base.Complex{Float64}, Array{Base.Complex{Float64}, 1}}})
    precompile(Tuple{typeof(Base.copyto!), LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}})
    precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.Perm{Base.Sort.Float.Left, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.getindex), Array{Base.Complex{Float64}, 2}, Base.StepRange{Int64, Int64}})
    precompile(Tuple{typeof(Base.Math.cospi), Float64})
    precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.Perm{Base.Sort.Float.Right, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.:(-)), LinearAlgebra.UniformScaling{Bool}, LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}})
    precompile(Tuple{typeof(Base.Sort.Float.nans2right!), Array{Int64, 1}, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Float64, 1}}, Int64, Int64})
    precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.Perm{Base.Sort.Float.Left, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.copyto!), Array{Float64, 2}, LinearAlgebra.Transpose{Float64, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.complex), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
    precompile(Tuple{getfield(Base, Symbol("##open#294")), (Base.Iterators).Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(identity), (getfield(Base, Symbol("##270#271"))){(Base.Iterators).Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}}, String})
    precompile(Tuple{typeof(Base.setindex!), Array{Float64, 1}, Base.Complex{Float64}, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Float64, 2}, Base.Complex{Float64}, Int64})
    precompile(Tuple{typeof(Base.throw_setindex_mismatch), Base.SubArray{Float64, 1, Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Base.Complex{Float64}, 1}, Base.IndexLinear, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(^)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Float64}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.isone), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.Math.sinpi), Float64})
    precompile(Tuple{typeof(Base._one), Float64, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.sqrt), Base.Complex{Float64}})
    precompile(Tuple{typeof(Base.throw_domerr_powbysq), Base.Complex{Float64}, Int64})
    precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Base.Complex{Float64}, 2}, Base.IndexLinear, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.Perm{Base.Sort.Float.Right, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.sqrt), LinearAlgebra.UpperTriangular{Float64, Array{Float64, 2}}})
    precompile(Tuple{getfield(Base, Symbol("##parse#333")), Nothing, typeof(identity), Type{Int64}, Base.SubString{String}})
    precompile(Tuple{typeof(Base.promote_shape), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.:(^)), LinearAlgebra.Symmetric{Float64, Array{Float64, 2}}, Float64})
    precompile(Tuple{typeof(Base.stride), Base.ReinterpretArray{Float64, 2, Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Int64})
    precompile(Tuple{typeof(Base.Math.cbrt), Float64})
    precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, LinearAlgebra.Transpose{Float64, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.cosh), Float64})
    precompile(Tuple{typeof(Base.inv), Base.Complex{Float64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.float), Tuple{Base.Broadcast.Extruded{Array{Float64, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.unsafe_copyto!), Array{Base.Complex{Float64}, 2}, Int64, Array{Base.Complex{Float64}, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.float), Tuple{Base.Broadcast.Extruded{Array{Base.Complex{Float64}, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.unsafe_copyto!), Array{Float64, 2}, Int64, Array{Float64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.sqrt), LinearAlgebra.Symmetric{Float64, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.sqrt), Array{Base.Complex{Float64}, 2}})
    precompile(Tuple{typeof(Base.Math.hypot), Float64, Float64})
    precompile(Tuple{typeof(Base.power_by_squaring), Base.Complex{Float64}, Int64})
    precompile(Tuple{typeof(Base.:(*)), LinearAlgebra.Transpose{Float64, Array{Float64, 2}}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.throw_boundserror), LinearAlgebra.Symmetric{Float64, Array{Float64, 2}}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Base.Complex{Float64}, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), LinearAlgebra.Hermitian{Float64, Array{Float64, 2}}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Array{Base.Complex{Float64}, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.atan), Float64, Float64})
    precompile(Tuple{typeof(Base.sqrt), LinearAlgebra.Hermitian{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}})
    precompile(Tuple{typeof(Base.iterate), Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.sqrt), Tuple{Base.Broadcast.Extruded{Array{Base.Complex{Float64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.throw_domerr_powbysq), LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Int64})
    precompile(Tuple{typeof(Base.power_by_squaring), LinearAlgebra.Hermitian{Float64, Array{Float64, 2}}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.throwdm), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.power_by_squaring), LinearAlgebra.Symmetric{Float64, Array{Float64, 2}}, Int64})
    precompile(Tuple{typeof(Base.println), Base.TTY, String})
    precompile(Tuple{typeof(Base.Broadcast.broadcast!), typeof(Base.conj), Array{Base.Complex{Float64}, 2}, Array{Base.Complex{Float64}, 2}})
    precompile(Tuple{typeof(Base.iterate), Tuple{Int64}, Int64})
    precompile(Tuple{typeof(Base.copyto!), Base.IndexCartesian, LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Base.IndexCartesian, LinearAlgebra.UpperTriangular{Float64, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.copyto!), Array{Float64, 2}, LinearAlgebra.UpperTriangular{Float64, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.fill!), Array{Float64, 2}, Float64})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Int64, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Base.Complex{Float64}, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}, Base.Broadcast.Extruded{LinearAlgebra.Transpose{Base.Complex{Float64}, Array{Base.Complex{Float64}, 1}}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.iterate), Tuple{Int64}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast), typeof(Base.:(-)), Array{Base.Complex{Float64}, 2}})
    precompile(Tuple{typeof(Base.:(^)), LinearAlgebra.Hermitian{Float64, Array{Float64, 2}}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast), typeof(Base.:(*)), Float64, Array{Base.Complex{Float64}, 2}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast), typeof(Base.:(-)), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.power_by_squaring), Array{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base.Math.throw_exp_domainerror), Float64})
    precompile(Tuple{typeof(Base.power_by_squaring), LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Int64})
    precompile(Tuple{typeof(Base.throw_domerr_powbysq), Array{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast), typeof(Base.:(+)), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}})
    precompile(Tuple{typeof(Base.sqrt), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.inv), LinearAlgebra.Hermitian{Float64, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.:(^)), Array{Float64, 2}, Float64})
    precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Float64, 2}, Base.IndexLinear, Base.SubArray{Float64, 1, Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}})
    precompile(Tuple{typeof(Base.inv), LinearAlgebra.Symmetric{Float64, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Base.Complex{Float64}, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}})
    precompile(Tuple{typeof(Base.transpose), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Base.Complex{Float64}, 2}, Base.SubArray{Float64, 1, Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Base.Complex{Float64}, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.sqrt), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.complex), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.MainInclude.include), String})
    precompile(Tuple{typeof(Base.:(*)), LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Float64, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}, Base.Broadcast.Extruded{LinearAlgebra.Transpose{Float64, Array{Float64, 1}}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Float64, 1}, Base.IndexLinear, Array{Base.Complex{Float64}, 1}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(^)), Tuple{Base.Broadcast.Extruded{Array{Base.Complex{Float64}, 1}, Tuple{Bool}, Tuple{Int64}}, Float64}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Float64, 2}, Base.IndexLinear, Array{Base.Complex{Float64}, 2}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.Math.sincos), Float64})
    precompile(Tuple{typeof(Base.power_by_squaring), Float64, Int64})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Base.Complex{Float64}, 2}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base._cpow), Base.Complex{Float64}, Float64})
    precompile(Tuple{typeof(Base.:(/)), Base.Complex{Float64}, Base.Complex{Float64}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.convert), Type{Array{Float64, N} where N}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.log), Base.Complex{Float64}})
    precompile(Tuple{typeof(Base.inv), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.copyto!), Array{Float64, 2}, LinearAlgebra.Hermitian{Float64, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Int64, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.copyto!), Array{Base.Complex{Float64}, 2}, LinearAlgebra.UpperTriangular{Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}})
    precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Sort.Float.Left, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Sort.Float.Right, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.:(*)), Array{Base.Complex{Float64}, 2}, LinearAlgebra.Diagonal{Float64, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Array{Float64, 1}, Int64, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.copyto!), Array{Float64, 2}, LinearAlgebra.Symmetric{Float64, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, LinearAlgebra.Diagonal{Float64, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.fill!), Base.ReinterpretArray{Float64, 2, Base.Complex{Float64}, Array{Base.Complex{Float64}, 2}}, Int64})
    precompile(Tuple{typeof(Base.sinh), Float64})
    precompile(Tuple{typeof(Base.Sort.Float.fpsort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.sin), Base.Complex{Float64}})
    precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Float64, 1}}})
end
